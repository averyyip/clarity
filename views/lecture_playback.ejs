<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Test</title>
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <link rel="stylesheet" type="text/css" href="/css/videojs-transcript.css">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
    <link href="https://vjs.zencdn.net/7.6.0/video-js.css" rel="stylesheet">
    <script src="https://vjs.zencdn.net/ie8/1.1.2/videojs-ie8.min.js"></script>
    <script src='https://vjs.zencdn.net/7.6.0/video.js'></script>
    <script src="https://rawgithub.com/spchuang/videojs-markers/master/dist/videojs-markers.js"></script>
    <script src="/js/videojs-transcript.js"></script>
    <link href="https://rawgithub.com/spchuang/videojs-markers/master/dist/videojs.markers.css" rel="stylesheet">
    <script src="https://raw.githubusercontent.com/MrSlide/parseSRT/master/build/parse-srt.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js"></script>
  </head>
  <body>
    <video id="example_video_1" class="video-js vjs-default-skin"
      controls preload="auto" width="640" height="264"
      data-setup='{"example_option":true}'>
     <source src="<%= video_link %>" type="video/mp4" />
     <p class="vjs-no-js">To view this video please enable JavaScript, and consider upgrading to a web browser that <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a></p>
        <track kind="captions" src="transcript.vtt" srclang="en" label="English" default>
    </video>
    <span id="currentCue"></span>

    <script>
        var video = videojs('example_video_1').ready(function(){
            var player = videojs('example_video_1')
            var span = document.querySelector('#currentCue');
            var tracks = player.textTracks()

            tracks[0].oncuechange = function(e) {
                var cue = this.activeCues[0];
                if (cue) {
                    span.innerHTML = '';
                    span.appendChild(cue.getCueAsHTML());
                }

            };
        })
    </script>

    <span id="transcript"></span>

    <script>
      var video = videojs('example_video_1').ready(function(){
        // Set up any options.
        var options = {
          showTitle: false,
          showTrackSelector: false,
        };

        // Initialize the plugin.
        var transcript = this.transcript(options);

        // Then attach the widget to the page.
        var transcriptContainer = document.querySelector('#transcript');
        transcriptContainer.appendChild(transcript.el());
      });
    </script>
    
    <script>
      var myPlayer = videojs('example_video_1');
      myPlayer.textTracks()
      myPlayer.markers({
          markers: [
              {time: 1720, text: "Database Management System"},
              {time: 2869, text: "Data Manipulation Languages"}        
          ]
       });
    </script>

    <input id="search" value="">
    <div style="overflow-y: scroll; height:200px; width:500px">
      <table id="result">
        <thead>
          <tr>
            <th>Start Time</th>
            <th></th>
            <th>Text</th>
          </tr>
        </thead>
        <tbody><tr><td colspan="4">...</td></tr></tbody>
      </table>
    </div>
      <script>
        function readTextFile(file)
          {
              var rawFile = new XMLHttpRequest();
              rawFile.open("GET", file, false);
              rawFile.onreadystatechange = function ()
              {
                  if(rawFile.readyState === 4)
                  {
                      if(rawFile.status === 200 || rawFile.status == 0)
                      {
                          var allText = rawFile.responseText;
                      }
                  }
              }
              rawFile.send(null);
              return rawFile.responseText;
          }

        var PF_SRT = function() {
          var pattern = /(\d+)\n([\d:,]+)\s+-{2}\>\s+([\d:,]+)\n([\s\S]*?(?=\n{2}|$))/gm;
          var _regExp;

          var init = function() {
            _regExp = new RegExp(pattern);
          };
          var parse = function(f) {
            if (typeof(f) != "string")
              throw "Sorry, Parser accept string only.";

            var result = [];
            if (f == null)
              return _subtitles;

            f = f.replace(/\r\n|\r|\n/g, '\n')

            while ((matches = pattern.exec(f)) != null) {
              result.push(toLineObj(matches));
            }
            return result;
          }
          var toLineObj = function(group) {
            return {
              line: group[1],
              startTime: group[2],
              endTime: group[3],
              text: group[4]
            };
          }
          init();
          return {
            parse: parse
          }
        }();


        var text = readTextFile("transcript.srt");
        var result = PF_SRT.parse(text);

        $("#search").on('change keydown paste input', function(){
          var query = $("#search").val().toLowerCase();
          var wrapper = $("#result tbody");
          wrapper.html('');
          for (var line in result) {
            var obj = result[line];
            if (obj.text.toLowerCase().includes(query) || query == "") {
              wrapper.append("<tr><td>" + obj.startTime.substr(0,8) + "</td><td> </td><td>" + obj.text + "</td></tr>");
            }
          }
        });
    </script>
  </body>
</html>
